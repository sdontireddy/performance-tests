<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="3.2" jmeter="3.2 r1790748">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="LoadOrders" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="OrderGroup" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${__P(NUMBER_OF_THREADS,1)}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1503170130000</longProp>
        <longProp name="ThreadGroup.end_time">1503170130000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="LoadOrders" enabled="true">
          <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="TCSORDER" elementType="Argument">
                <stringProp name="Argument.name">TCSORDER</stringProp>
                <stringProp name="Argument.value">${__P(TCSORDER,1)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
                <elementProp name="SINGLEITEM_PERCENTAGE_3C" elementType="Argument">
                <stringProp name="Argument.name">SINGLEITEM_PERCENTAGE_3C</stringProp>
                <stringProp name="Argument.value">${__P(SINGLEITEM_PERCENTAGE_3C,1)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="INSTOCK_PERCENTAGE" elementType="Argument">
                <stringProp name="Argument.name">INSTOCK_PERCENTAGE</stringProp>
                <stringProp name="Argument.value">${__P(INSTOCK_PERCENTAGE,1)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="HOTMARKET_PERCENTAGE" elementType="Argument">
                <stringProp name="Argument.name">HOTMARKET_PERCENTAGE</stringProp>
                <stringProp name="Argument.value">${__P(HOTMARKET_PERCENTAGE,1)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="INSTOCK_MULTIPLE_PERCENTAGE" elementType="Argument">
                <stringProp name="Argument.name">INSTOCK_MULTIPLE_PERCENTAGE</stringProp>
                <stringProp name="Argument.value">${__P(INSTOCK_MULTIPLE_PERCENTAGE,1)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="HOTMARKET_MULTIPLE_PERCENTAGE" elementType="Argument">
                <stringProp name="Argument.name">HOTMARKET_MULTIPLE_PERCENTAGE</stringProp>
                <stringProp name="Argument.value">${__P(HOTMARKET_MULTIPLE_PERCENTAGE,1)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
               <elementProp name="DROPSHIP_PERCENTAGE" elementType="Argument">
                <stringProp name="Argument.name">DROPSHIP_PERCENTAGE</stringProp>
                <stringProp name="Argument.value">${__P(PRESELL_HOTMARKET_PERCENTAGE,1)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
               <elementProp name="DROPSHIP_MULTIPLE_PERCENTAGE" elementType="Argument">
                <stringProp name="Argument.name">DROPSHIP_MULTIPLE_PERCENTAGE</stringProp>
                <stringProp name="Argument.value">${__P(PRESELL_HOTMARKET_MULTIPLE_PERCENTAGE,1)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="MIXED_PERCENTAGE" elementType="Argument">
                <stringProp name="Argument.name">MIXED_PERCENTAGE</stringProp>
                <stringProp name="Argument.value">${__P(MIXED_PERCENTAGE,1)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="NUMBER_OF_ORDERS" elementType="Argument">
                <stringProp name="Argument.name">NUMBER_OF_ORDERS</stringProp>
                <stringProp name="Argument.value">${__P(NUMBER_OF_ORDERS,1)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="NUMBER_OF_ORDERS" elementType="Argument">
                              <stringProp name="Argument.name">NUMBER_OF_ORDERS</stringProp>
                              <stringProp name="Argument.value">${__P(NUMBER_OF_ORDERS,1)}</stringProp>
                              <stringProp name="Argument.metadata">=</stringProp>
                            </elementProp>

                           <elementProp name="NUMBER_OF_LINEITEMS" elementType="Argument">
                                           <stringProp name="Argument.name">NUMBER_OF_LINEITEMS</stringProp>
                                           <stringProp name="Argument.value">${__P(NUMBER_OF_LINEITEMS,1)}</stringProp>
                                           <stringProp name="Argument.metadata">=</stringProp>
                                         </elementProp>
                <elementProp name="MAPPING_FILE" elementType="Argument">
                                                          <stringProp name="Argument.name">MAPPING_FILE</stringProp>
                                                          <stringProp name="Argument.value">${__P(MAPPING_FILE,mapping.yaml)}</stringProp>
                                                          <stringProp name="Argument.metadata">=</stringProp>
                                                        </elementProp>


            </collectionProp>
          </elementProp>
          <stringProp name="classname">com.ucbos.performance.jmeter.LoadOrders</stringProp>

          <!--  <stringProp name="classname">com.ucbos.utils.XMLUtil</stringProp> -->
        </JavaSampler>
        <hashTree/>
        <ResultSaver guiclass="ResultSaverGui" testclass="ResultSaver" testname="orderloadtestresults" enabled="true">
          <stringProp name="FileSaver.filename">orderloadtestresults</stringProp>
          <boolProp name="FileSaver.errorsonly">true</boolProp>
          <boolProp name="FileSaver.skipautonumber">true</boolProp>
          <boolProp name="FileSaver.skipsuffix">true</boolProp>
          <boolProp name="FileSaver.successonly">true</boolProp>
          <boolProp name="FileSaver.addTimstamp">true</boolProp>
        </ResultSaver>
        <hashTree/>
      </hashTree>
    </hashTree>
    <WorkBench guiclass="WorkBenchGui" testclass="WorkBench" testname="WorkBench" enabled="true">
      <boolProp name="WorkBench.save">true</boolProp>
    </WorkBench>
    <hashTree/>
  </hashTree>
</jmeterTestPlan>